//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MS.Business
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProjectDbContext : DbContext
    {
        public ProjectDbContext()
            : base("name=ProjectDbContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CampaignCategory> CampaignCategories { get; set; }
        public virtual DbSet<Kategoritipi> Kategoritipis { get; set; }
        public virtual DbSet<TblKullanicilar> TblKullanicilars { get; set; }
        public virtual DbSet<Campaign> Campaigns { get; set; }
        public virtual DbSet<Kazanclar> Kazanclars { get; set; }
        public virtual DbSet<BebeMoneyKatalogKategorileri> BebeMoneyKatalogKategorileris { get; set; }
        public virtual DbSet<MilKatalogUrunleri> MilKatalogUrunleris { get; set; }
        public virtual DbSet<TblDevice> TblDevices { get; set; }
        public virtual DbSet<SallaKazan> SallaKazans { get; set; }
        public virtual DbSet<tblImage> tblImages { get; set; }
        public virtual DbSet<EventLog> EventLogs { get; set; }
        public virtual DbSet<Magazalar> Magazalar { get; set; }
        public virtual DbSet<TblCMSNotifMaster> TblCMSNotifMaster { get; set; }
        public virtual DbSet<TblCMSNotifQueue> TblCMSNotifQueue { get; set; }
    
        public virtual ObjectResult<spV4_AllDevicesWithTrackingNumber_Result> spV4_AllDevicesWithTrackingNumber(string trackingNumber)
        {
            var trackingNumberParameter = trackingNumber != null ?
                new ObjectParameter("trackingNumber", trackingNumber) :
                new ObjectParameter("trackingNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spV4_AllDevicesWithTrackingNumber_Result>("spV4_AllDevicesWithTrackingNumber", trackingNumberParameter);
        }
    
        public virtual int spV4_AddNotificationLog(string deviceID, string deviceToken, string nMessage, string status, string nType)
        {
            var deviceIDParameter = deviceID != null ?
                new ObjectParameter("DeviceID", deviceID) :
                new ObjectParameter("DeviceID", typeof(string));
    
            var deviceTokenParameter = deviceToken != null ?
                new ObjectParameter("DeviceToken", deviceToken) :
                new ObjectParameter("DeviceToken", typeof(string));
    
            var nMessageParameter = nMessage != null ?
                new ObjectParameter("NMessage", nMessage) :
                new ObjectParameter("NMessage", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var nTypeParameter = nType != null ?
                new ObjectParameter("NType", nType) :
                new ObjectParameter("NType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spV4_AddNotificationLog", deviceIDParameter, deviceTokenParameter, nMessageParameter, statusParameter, nTypeParameter);
        }
    
        public virtual int spUpdateCategoryCacheKey(Nullable<int> categoryId)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("categoryId", categoryId) :
                new ObjectParameter("categoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateCategoryCacheKey", categoryIdParameter);
        }
    
        public virtual ObjectResult<spCMSGetNotifDevices_Result> spCMSGetNotifDevices(string notifKey)
        {
            var notifKeyParameter = notifKey != null ?
                new ObjectParameter("notifKey", notifKey) :
                new ObjectParameter("notifKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCMSGetNotifDevices_Result>("spCMSGetNotifDevices", notifKeyParameter);
        }
    
        public virtual ObjectResult<spCMSGetNotifMasterData_Result> spCMSGetNotifMasterData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spCMSGetNotifMasterData_Result>("spCMSGetNotifMasterData");
        }
    
        public virtual int spCMSNotifMaster(string notifText, string notifKey)
        {
            var notifTextParameter = notifText != null ?
                new ObjectParameter("notifText", notifText) :
                new ObjectParameter("notifText", typeof(string));
    
            var notifKeyParameter = notifKey != null ?
                new ObjectParameter("notifKey", notifKey) :
                new ObjectParameter("notifKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCMSNotifMaster", notifTextParameter, notifKeyParameter);
        }
    }
}
